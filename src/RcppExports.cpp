// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// colSds
arma::rowvec colSds(const arma::mat X, const int norm_type);
RcppExport SEXP PathMatch_colSds(SEXP XSEXP, SEXP norm_typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int >::type norm_type(norm_typeSEXP);
    rcpp_result_gen = Rcpp::wrap(colSds(X, norm_type));
    return rcpp_result_gen;
END_RCPP
}
// rowSds
arma::colvec rowSds(const arma::mat X, const int norm_type);
RcppExport SEXP PathMatch_rowSds(SEXP XSEXP, SEXP norm_typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int >::type norm_type(norm_typeSEXP);
    rcpp_result_gen = Rcpp::wrap(rowSds(X, norm_type));
    return rcpp_result_gen;
END_RCPP
}
// dist2dCPP
double dist2dCPP(arma::rowvec a, arma::rowvec b, arma::rowvec c);
RcppExport SEXP PathMatch_dist2dCPP(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type a(aSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(dist2dCPP(a, b, c));
    return rcpp_result_gen;
END_RCPP
}
// RDPCPP
arma::mat RDPCPP(arma::mat points, double epsilon);
RcppExport SEXP PathMatch_RDPCPP(SEXP pointsSEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type points(pointsSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(RDPCPP(points, epsilon));
    return rcpp_result_gen;
END_RCPP
}
// sign_change
int sign_change(Rcpp::LogicalVector signs);
RcppExport SEXP PathMatch_sign_change(SEXP signsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::LogicalVector >::type signs(signsSEXP);
    rcpp_result_gen = Rcpp::wrap(sign_change(signs));
    return rcpp_result_gen;
END_RCPP
}
// number_change
int number_change(Rcpp::NumericVector numbers);
RcppExport SEXP PathMatch_number_change(SEXP numbersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type numbers(numbersSEXP);
    rcpp_result_gen = Rcpp::wrap(number_change(numbers));
    return rcpp_result_gen;
END_RCPP
}
// bearing_change_fix_cpp
Rcpp::NumericVector bearing_change_fix_cpp(Rcpp::NumericVector bearing_change);
RcppExport SEXP PathMatch_bearing_change_fix_cpp(SEXP bearing_changeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type bearing_change(bearing_changeSEXP);
    rcpp_result_gen = Rcpp::wrap(bearing_change_fix_cpp(bearing_change));
    return rcpp_result_gen;
END_RCPP
}
// trip_match_cpp
Rcpp::NumericVector trip_match_cpp(arma::mat M1, arma::mat M2, double dist_cut, double heading_cut);
RcppExport SEXP PathMatch_trip_match_cpp(SEXP M1SEXP, SEXP M2SEXP, SEXP dist_cutSEXP, SEXP heading_cutSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M1(M1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M2(M2SEXP);
    Rcpp::traits::input_parameter< double >::type dist_cut(dist_cutSEXP);
    Rcpp::traits::input_parameter< double >::type heading_cut(heading_cutSEXP);
    rcpp_result_gen = Rcpp::wrap(trip_match_cpp(M1, M2, dist_cut, heading_cut));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"PathMatch_colSds", (DL_FUNC) &PathMatch_colSds, 2},
    {"PathMatch_rowSds", (DL_FUNC) &PathMatch_rowSds, 2},
    {"PathMatch_dist2dCPP", (DL_FUNC) &PathMatch_dist2dCPP, 3},
    {"PathMatch_RDPCPP", (DL_FUNC) &PathMatch_RDPCPP, 2},
    {"PathMatch_sign_change", (DL_FUNC) &PathMatch_sign_change, 1},
    {"PathMatch_number_change", (DL_FUNC) &PathMatch_number_change, 1},
    {"PathMatch_bearing_change_fix_cpp", (DL_FUNC) &PathMatch_bearing_change_fix_cpp, 1},
    {"PathMatch_trip_match_cpp", (DL_FUNC) &PathMatch_trip_match_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_PathMatch(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
